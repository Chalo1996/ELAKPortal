import { Menu, Switch } from "antd";
import {
  LogoutOutlined,
  SunOutlined,
  MoonOutlined,
  HomeOutlined,
  GlobalOutlined,
  EllipsisOutlined,
} from "@ant-design/icons";
import { useTheme } from "../store/context/theme-context";
import imgLogo from "../assets/Equity_Group_Logo.png";
import profileImg from "../assets/profile.png";

const { SubMenu } = Menu;

const Sidebar = ({ onSelect }) => {
  const { theme, toggleTheme } = useTheme();

  const handleClick = (e) => {
    onSelect(e.key);
  };

  const UmbrellaIcon = (props) => (
    <svg
        width="20"
        height="20"
        viewBox="0 0 32 32"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        {...props}
    >
        <path d="M..." fill="#000" /> {<svg width="33" height="32" viewBox="0 0 33 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M4.03718 13.9021C4.63903 7.78286 9.8074 3 16.0324 3C22.2574 3 27.4257 7.78286 28.0276 13.9021L28.1356 15H17.0325L17.0325 25C17.0325 25.5527 17.4798 26 18.0325 26C18.5852 26 19.0325 25.5527 19.0325 25V24H21.0325V25C21.0325 26.6573 19.6898 28 18.0325 28C16.3752 28 15.0325 26.6573 15.0325 25L15.0325 15H3.9292L4.03718 13.9021ZM17.0325 13H20.6021C20.4156 10.2535 19.4804 8.26877 18.5634 6.94421C18.0485 6.20039 17.5362 5.66086 17.1593 5.31189C17.1151 5.2709 17.0727 5.23258 17.0325 5.1969V13ZM15.0325 5.38639V13H11.6691C11.8557 10.2535 12.7908 8.26877 13.7078 6.94421C14.1874 6.25141 14.6647 5.73584 15.0325 5.38639ZM6.19708 13H9.66505C9.85537 9.80131 10.939 7.43837 12.0458 5.83136C9.1056 7.11527 6.87981 9.77273 6.19708 13ZM22.6062 13C22.4212 9.89074 21.3921 7.57116 20.3182 5.96793C23.1097 7.29778 25.2083 9.88314 25.8677 13H22.6062Z" fill="#757679"/>
</svg>
} </svg>
);

const SaveIcon = (props) => (
  <svg
      width="20"
      height="20"
      viewBox="0 0 32 32"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
  >
      <path d="M..." fill="#000" /> {<svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M17 3H15V7.41009C13.9195 6.51141 12.4312 6 10.5555 6H8V7C8 8.60019 8.43571 10.1068 9.41263 11.2283C10.407 12.3698 11.8653 13 13.6667 13H15L15 16.15C14.8976 16.0916 14.794 16.0363 14.6899 15.9843C13.4379 15.3583 11.7784 15 10 15C8.22156 15 6.56205 15.3583 5.31015 15.9843C4.11805 16.5803 3 17.5887 3 19V23C3 24.4113 4.1179 25.4197 5.31004 26.0158C6.56193 26.6417 8.22145 27 10 27C11.7786 27 13.4381 26.6417 14.69 26.0158C14.9663 25.8777 15.2386 25.7174 15.4939 25.535C15.9313 26.1704 16.6078 26.6647 17.31 27.0158C18.5619 27.6417 20.2214 28 22 28C23.7786 28 25.4381 27.6417 26.69 27.0158C27.8821 26.4197 29 25.4113 29 24V16C29 14.5887 27.8819 13.5803 26.6899 12.9843C25.438 12.3583 23.7784 12 22 12C20.2216 12 18.5621 12.3583 17.3101 12.9843C17.206 13.0363 17.1024 13.0916 17 13.15L17 10H18.3333C20.1347 10 21.593 9.36982 22.5874 8.22827C23.5643 7.1068 24 5.60019 24 4V3H21.4445C19.5688 3 18.0805 3.51141 17 4.41009V3ZM17 16C17.0005 16.2459 17.2262 16.7377 18.2046 17.2269C19.1242 17.6867 20.4647 18 22 18C23.5353 18 24.8758 17.6867 25.7954 17.2269C26.7749 16.7372 27 16.2456 27 16C27 15.7544 26.7749 15.2628 25.7954 14.7731C24.8758 14.3133 23.5353 14 22 14C20.4647 14 19.1242 14.3133 18.2046 14.7731C17.2262 15.2623 17.0005 15.7541 17 16ZM17 18.85V20C17 20.2457 17.2251 20.7373 18.2045 21.2269C19.1241 21.6868 20.4646 22 22 22C23.5354 22 24.8759 21.6868 25.7955 21.2269C26.7749 20.7373 27 20.2457 27 20V18.85C26.8976 18.9084 26.794 18.9637 26.6899 19.0157C25.438 19.6417 23.7784 20 22 20C20.2216 20 18.5621 19.6417 17.3101 19.0157C17.206 18.9637 17.1024 18.9084 17 18.85ZM15 19C15 18.7544 14.7749 18.2628 13.7954 17.7731C12.8758 17.3133 11.5353 17 10 17C8.46473 17 7.12424 17.3133 6.20457 17.7731C5.22509 18.2628 5 18.7544 5 19C5 19.2456 5.22509 19.7372 6.20457 20.2269C7.12424 20.6867 8.46473 21 10 21C11.5353 21 12.8758 20.6867 13.7954 20.2269C14.7749 19.7372 15 19.2456 15 19ZM5 23V21.85C5.10235 21.9084 5.20597 21.9637 5.31015 22.0157C6.56205 22.6417 8.22156 23 10 23C11.7784 23 13.4379 22.6417 14.6899 22.0157C14.794 21.9637 14.8976 21.9084 15 21.85V23C15 23.2457 14.7749 23.7373 13.7955 24.2269C12.8759 24.6868 11.5354 25 10 25C8.46455 25 7.12407 24.6868 6.20446 24.2269C5.2251 23.7373 5 23.2457 5 23ZM26.69 23.0158C26.7941 22.9637 26.8977 22.9085 27 22.8502V24C27 24.2457 26.7749 24.7373 25.7955 25.2269C24.8759 25.6868 23.5354 26 22 26C20.4646 26 19.1241 25.6868 18.2045 25.2269C17.2251 24.7373 17 24.2457 17 24V22.8502C17.1023 22.9085 17.2059 22.9637 17.31 23.0158C18.5619 23.6417 20.2214 24 22 24C23.7786 24 25.4381 23.6417 26.69 23.0158ZM14.9014 11H13.6667C12.3569 11 11.4818 10.5588 10.9207 9.91459C10.5054 9.43785 10.212 8.79158 10.0794 8H10.5555C12.2843 8 13.3601 8.53053 14.0088 9.21796C14.4615 9.6976 14.7588 10.3095 14.9014 11ZM18.3333 8H17.0986C17.2412 7.30946 17.5385 6.6976 17.9912 6.21796C18.6399 5.53053 19.7157 5 21.4445 5H21.9206C21.788 5.79158 21.4946 6.43785 21.0793 6.91459C20.5182 7.55875 19.6431 8 18.3333 8Z" fill="#757679"/>
</svg>
} </svg>
);

const BorrowIcon = (props) => (
  <svg
      width="20"
      height="20"
      viewBox="0 0 32 32"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
  >
      <path d="M..." fill="#000" /> {<svg width="33" height="32" viewBox="0 0 33 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M16.0325 3C12.7188 3 10.0325 5.68629 10.0325 9C10.0325 12.3137 12.7188 15 16.0325 15C19.3462 15 22.0325 12.3137 22.0325 9C22.0325 5.68629 19.3462 3 16.0325 3ZM12.0325 9C12.0325 6.79086 13.8233 5 16.0325 5C18.2416 5 20.0325 6.79086 20.0325 9C20.0325 11.2091 18.2416 13 16.0325 13C13.8233 13 12.0325 11.2091 12.0325 9Z" fill="#757679"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M17.4797 18.6056C16.2661 17.9988 15.0404 17.9993 13.2212 18L4.03247 18V24.4142L4.32536 24.7071C5.06301 25.4448 6.39435 26.5047 8.06672 27.3849C9.73832 28.2647 11.8174 29 14.0325 29C16.2494 29 18.9922 28.0934 21.4283 27.0433C23.8971 25.9792 26.1919 24.7046 27.5625 23.848L28.0325 23.5542V23C28.0325 22.3349 27.8609 21.5001 27.1208 20.8657C26.4198 20.2649 25.3842 20 24.0325 20H19.0827C18.7416 19.5332 18.2023 18.9669 17.4797 18.6056ZM13.0325 20C15.1084 20 15.8403 20.022 16.5853 20.3944C16.8416 20.5226 17.0784 20.7229 17.2756 20.9428C17.4746 21.1646 17.5975 21.3662 17.638 21.4472L17.9144 22H12.0325V24H20.0325V22H24.0325C25.1808 22 25.6017 22.1979 25.8192 22.3843C25.8595 22.4188 25.8948 22.4578 25.9244 22.5044C24.6029 23.2919 22.6792 24.3263 20.6366 25.2067C18.2394 26.24 15.8156 27 14.0325 27C12.2475 27 10.4933 26.402 8.99822 25.6151C7.71953 24.9421 6.67929 24.1567 6.03247 23.5708V20H13.0325Z" fill="#757679"/>
</svg>
} </svg>
);

const AccountsIcon = (props) => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 32 32"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path d="M29.4729 10.119L15.9353 2.85376L5 9.25585V5.00008H3V12.7443L15.9778 5.1464L28.5271 11.8812L29.4729 10.119Z" fill="#757679"/>
    <path fillRule="evenodd" clipRule="evenodd" d="M8 15.5001V25.3698C8 26.936 9.20361 28.1057 10.5897 28.8246C12.0257 29.5693 13.9401 30.0001 16 30.0001C18.0599 30.0001 19.9743 29.5693 21.4103 28.8246C22.7964 28.1057 24 26.936 24 25.3698V15.5001C24 13.9508 22.77 12.8173 21.397 12.1308C19.9641 11.4144 18.0546 11.0001 16 11.0001C13.9454 11.0001 12.0359 11.4144 10.603 12.1308C9.22998 12.8173 8 13.9508 8 15.5001ZM10 18.5313V20.5715C10 20.9247 10.3218 21.5257 11.49 22.0979C12.5924 22.6378 14.1856 23.0001 16 23.0001C17.8144 23.0001 19.4076 22.6378 20.51 22.0979C21.6782 21.5257 22 20.9247 22 20.5715V18.5313C21.8046 18.654 21.6024 18.7667 21.397 18.8694C19.9641 19.5858 18.0546 20.0001 16 20.0001C13.9454 20.0001 12.0359 19.5858 10.603 18.8694C10.3976 18.7667 10.1954 18.654 10 18.5313ZM22 15.5001C22 15.8838 21.663 16.5003 20.5025 17.0805C19.4019 17.6309 17.8114 18.0001 16 18.0001C14.1886 18.0001 12.5981 17.6309 11.4975 17.0805C10.337 16.5003 10 15.8838 10 15.5001C10 15.1164 10.337 14.4999 11.4975 13.9196C12.5981 13.3693 14.1886 13.0001 16 13.0001C17.8114 13.0001 19.4019 13.3693 20.5025 13.9196C21.663 14.4999 22 15.1164 22 15.5001ZM10 25.3698V23.5583C10.198 23.6805 10.4027 23.7924 10.6103 23.894C12.0413 24.5949 13.9481 25.0001 16 25.0001C18.0519 25.0001 19.9587 24.5949 21.3897 23.894C21.5973 23.7924 21.802 23.6805 22 23.5583V25.3698C22 25.8088 21.6368 26.4542 20.4895 27.0492C19.3921 27.6183 17.8064 28.0001 16 28.0001C14.1936 28.0001 12.6079 27.6183 11.5105 27.0492C10.3632 26.4542 10 25.8088 10 25.3698Z" fill="#757679"/>
  </svg>
);

const TransactIcon = (props) => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 32 32"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path d="M10 18V16H8V18H10Z" fill="#757679"/>
    <path d="M14 16V18H12L12 16H14Z" fill="#757679"/>
    <path d="M18 18V16L16 16L16 18L18 18Z" fill="#757679"/>
    <path d="M10 19L10 21H8L8 19H10Z" fill="#757679"/>
    <path d="M14 21V19H12V21H14Z" fill="#757679"/>
    <path d="M18 19V21H16V19L18 19Z" fill="#757679"/>
    <path d="M10 24V22H8V24H10Z" fill="#757679"/>
    <path d="M14 22V24H12V22H14Z" fill="#757679"/>
    <path d="M18 24V22H16V24H18Z" fill="#757679"/>
    <path d="M18 8V10H16V8H18Z" fill="#757679"/>
    <path fillRule="evenodd" clipRule="evenodd" d="M22 8V6C22 4.89543 21.1046 4 20 4H6C4.89543 4 4 4.89543 4 6V26C4 27.1046 4.89543 28 6 28H20C21.1046 28 22 27.1046 22 26L22 24H26C27.1046 24 28 23.1046 28 22L28 10C28 8.89543 27.1046 8 26 8H22ZM20 26L20 14L6 14V26H20ZM22 10V12H26V10L22 10ZM22 22H26L26 14H22V22ZM6 12L20 12V6L6 6V12Z" fill="#757679"/>
  </svg>
);

  const items = [
    {
      key: "logo",
      selectable: false,
      label: (
        <img
          src={imgLogo}
          alt="Equity Bank"
          style={{ width: 90, height: 60, marginTop: 20 }}
        />
      ),
    },
    {
      key: "profile",
      selectable: false,
      label: (
        <div className="mt-7 flex w-full items-center justify-start">
          <div>
            <img
              src={profileImg}
              alt="Profile"
              className="border-red-500 w-12 h-12 rounded-full"
            />
          </div>
          <div className="ml-5">
            <p className="font-bold">John Doe</p>
            <p style={{ fontSize: 12, color: "#888" }}>Professional Title</p>
          </div>
        </div>
      ),
    },
    {
      key: "home",
      selectable: true,
      icon: <HomeOutlined />,
      label: "Home",
    },
    {
      key: "space",
      label: "",
    },
    {
      key: "divider1",
      divider: true,
    },
    {
      key: "more",
      selectable: true,
      icon: <EllipsisOutlined />,
      label: "More",
    },
    {
      key: "accounts",
      icon: <AccountsIcon />,
      label: "Accounts",
    },
    {
      key: "transact",
      icon: <TransactIcon />,
      label: "Transact",
    },
    {
      key: "borrow",
      icon: <BorrowIcon />,
      label: "Borrow",
    },
    {
      key: "save",
      icon: <SaveIcon />,
      label: "Save",
    },
    {
      key: "insure",
      icon: <UmbrellaIcon />,
      label: "Insure",
    },
    {
      key: "theme",
      selectable: true,
      icon: theme === "dark" ? <MoonOutlined /> : <SunOutlined />,
      label: (
        <div className="flex items-center justify-between">
          <span className="mr-2">Dark Mode</span>
          <Switch
            checked={theme === "dark"}
            onChange={toggleTheme}
            size="small"
          />
        </div>
      ),
    },
    {
      key: "english",
      selectable: true,
      icon: <GlobalOutlined />,
      label: "English",
    },
    {
      key: "signout",
      selectable: true,
      icon: <LogoutOutlined />,
      label: "Sign Out",
    },
  ];

  return (
    <Menu
      onClick={handleClick}
      style={{ width: 256, height: "100vh" }}
      defaultSelectedKeys={["1"]}
      mode="inline"
      theme={theme}
    >
      {items.map((item) => {
        const menuItemStyle = {
          height: "auto",
        };

        if (item.children) {
          return (
            <SubMenu
              key={item.key}
              icon={item.icon}
              title={item.label}
              style={menuItemStyle}
            >
              {item.children.map((child) => (
                <Menu.Item key={child.key}>{child.label}</Menu.Item>
              ))}
            </SubMenu>
          );
        } else if (item.divider) {
          return <Menu.Divider key={item.key} />;
        } else {
          return (
            <Menu.Item
              key={item.key}
              icon={item.icon}
              style={menuItemStyle}
             // disabled={!item.selectable}
            >
              {item.label}
            </Menu.Item>
          );
        }
      })}
    </Menu>
  );
};

export default Sidebar;
